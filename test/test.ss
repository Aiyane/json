(load "./json.ss")

(define token
        "[{\"Number\":1,\"Name\":\"Laetetia\",\"Gender\":\"female\",\"Age\":16,\"Father\":{\"Number\":2,\"Name\":\"Louis\",\"Age\":48,\"Revenue\":1000000},\"Mother\":{\"Number\":3,\"Name\":\"Lamia\",\"Age\":43,\"Revenue\":800000},\"Revenue\":100000,\"Score\":{\"Math\":{\"School\":8,\"Exam\":9},\"Literature\":{\"School\":9,\"Exam\":9}}},{\"Number\":4,\"Name\":\"Tania\",\"Gender\":\"female\",\"Age\":17,\"Father\":{\"Number\":5,\"Name\":\"Thomas\",\"Age\":45,\"Revenue\":150000},\"Mother\":{\"Number\":6,\"Name\":\"Jenney\",\"Age\":42,\"Revenue\":180000},\"Revenue\":80000,\"Score\":{\"Math\":{\"School\":7,\"Exam\":8},\"Literature\":{\"School\":10,\"Exam\":6}}},{\"Number\":7,\"Name\":\"Anne\",\"Gender\":\"female\",\"Age\":18,\"Father\":{\"Number\":8,\"Name\":\"Alex\",\"Age\":40,\"Revenue\":200000},\"Mother\":{\"Number\":9,\"Name\":\"Sicie\",\"Age\":43,\"Revenue\":50000},\"Revenue\":120000,\"Score\":{\"Math\":{\"School\":8,\"Exam\":8},\"Literature\":{\"School\":6,\"Exam\":8}}}]")

(define x (string->json token))
(newline)
(display (json->string x))
(newline)
(display  (json-ref x 0 "Name"))
(newline)
(display (json-ref x 0 "Mother" "Name"))
(newline)
(define displaydemo (lambda (x) (display (json->string x))))
(newline)
(displaydemo (json-ref x 0 "Father"))
(newline)
(displaydemo (json-set x 0 "Revenue" 80000))
(newline)
(displaydemo (json-set x #t "Mother" "Age" "secret"))
(newline)
(displaydemo (json-set x #t "Score" #t #t (lambda (x) (* x 5))))
(newline)
(displaydemo (json-push x 0 "Father" "Profession" "IT"))
(newline)
(displaydemo (json-push x #t "Nationality" "french"))
(newline)
(displaydemo (json-drop x 0 "Score"))
(newline)
(displaydemo (json-drop x #t "Mother" "Age"))
(newline)
(displaydemo (json-drop x #t (lambda (x)(not (or (equal? x "Name")(equal? x "Age"))))))
(newline)
(displaydemo (json-reduce x #t (lambda (x)(or (equal? x "Father")(equal? x "Mother"))) (lambda (x y)(json-push y "Gender" (if (equal? (cadr x) "Father") "male" "female")))))
(newline)
(displaydemo (json-set x #t "Score" #t (lambda (x)(+ (json-ref x "School") (json-ref x "Exam")))))
(newline)
(displaydemo (json-set x #t (lambda (x)(json-ref x "Father"))))
(newline)
(displaydemo (json-set x #t (lambda (x)(json-set x "Revenue" (lambda (y)(+ y (json-ref x "Father" "Revenue") (json-ref x "Mother" "Revenue")))))))
(newline)
(displaydemo (json-set x #t "Score" (lambda (x)(let ((x (json-set x #t (lambda(n)(+ (json-ref n "School")(json-ref n "Exam"))))))(+ (json-ref x "Math")(json-ref x "Literature"))))))
(newline)
